--- jhbuild-3.38.0/build-aux/py-compile~	2020-09-12 17:26:52.000000000 +0200
+++ jhbuild-3.38.0/build-aux/py-compile	2025-05-24 20:07:27.671767908 +0200
@@ -116,7 +116,7 @@ else
 fi
 
 $PYTHON -c "
-import sys, os, py_compile, imp
+import sys, os, py_compile, importlib.util
 
 files = '''$files'''
 
@@ -129,15 +129,16 @@ for file in files.split():
 	    continue
     sys.stdout.write(file)
     sys.stdout.flush()
-    if hasattr(imp, 'get_tag'):
-        py_compile.compile(filepath, imp.cache_from_source(filepath), path)
+    if hasattr(importlib.util, 'cache_from_source'):
+      py_compile.compile(filepath, importlib.util.cache_from_source(filepath), path)
     else:
-        py_compile.compile(filepath, filepath + 'c', path)
+      py_compile.compile(filepath, filepath + 'c', path)
 sys.stdout.write('\n')" || exit $?
 
 # this will fail for python < 1.5, but that doesn't matter ...
 $PYTHON -O -c "
-import sys, os, py_compile, imp
+import sys, os, py_compile
+import importlib.util
 
 # pypy does not use .pyo optimization
 if hasattr(sys, 'pypy_translation_info'):
@@ -153,10 +154,10 @@ for file in files.split():
 	    continue
     sys.stdout.write(file)
     sys.stdout.flush()
-    if hasattr(imp, 'get_tag'):
-        py_compile.compile(filepath, imp.cache_from_source(filepath, False), path)
+    if hasattr(importlib.util, 'cache_from_source'):
+      py_compile.compile(filepath, importlib.util.cache_from_source(filepath, False), path)
     else:
-        py_compile.compile(filepath, filepath + 'o', path)
+      py_compile.compile(filepath, filepath + 'o', path)
 sys.stdout.write('\n')" 2>/dev/null || :
 
 # Local Variables:
